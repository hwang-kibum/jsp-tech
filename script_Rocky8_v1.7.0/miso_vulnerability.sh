#!/bin/bash
source 00.util_Install_latest
SCRIPTLOGFILE=miso_vulnerability.log
exec > >(tee -a "$SCRIPTLOGFILE") 2>&1
echo $DATE" is running" >> ${SCRIPTLOGFILE}
nohup bash -c "sleep 300; cat /dev/null > "${SCRIPTLOGFILE} > /dev/null 2>&1 &


#### root 권한 실행 확인
checkroot()
{
if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root" 
	exit 1
fi
}
DB_vulnerable()
{
echo "change DB root password"
cnt=0
while [ "$cnt" == "0" ]; do 
	read -p "DB root password change >" RET
	read -p "PASSWORD = $RET / y(enterkey) n(change) >" RET1
	case $RET1 in
	n)
	;;
	y)
	db_root_passwd=${RET}
	cnt=1
	;;
	*)
	db_root_passwd=${RET}
	cnt=1
	;;
	esac
done

touch vulner.sql 
cat /dev/null > vulner.sql
echo "ALTER USER 'root'@'localhost' IDENTIFIED VIA MYSQL_NATIVE_PASSWORD USING PASSWORD('"${db_root_passwd}"');">> vulner.sql

echo "DY-02. 취약한 패스워드 사용제한"
echo "use mysql;" >>vulner.sql
echo "delete from user where host='' or user ='';" >> vulner.sql
echo "delete from user where host='localhost' and user='"${MY_USER}"';" >> vulner.sql

echo "drop test database"
echo "drop database test;" >> vulner.sql


echo "DY-08. 로그 활성화"
sudo mkdir -p ${dlog_path}/server_audit
sudo mkdir -p ${dlog_path}/binary_log
chown -R ${MY_USER}:${MY_USER} ${dlog_path}
echo "my.cnf backup"
sudo cp -n ${db_path}/conf-set/my.cnf ${db_path}/conf-set/my.cnf.bak

cat<<EOF>>${db_path}/conf-set/my.cnf

log-bin=${dlog_path}/binary_log/mysql-bin
expire_logs_days=7         
max_binlog_size=1G

plugin_load_add= server_audit
server_audit_output_type=file
server_audit_query_log_limit=1024
server_audit_syslog_ident=${dlog_path}/server_audit/mysql-server_auditing
server_audit_logging=1
server_audit_file_path=${dlog_path}/server_audit/server_audit.log
server_audit_events=connect,query_ddl,query_dcl,query_dml_no_select
server_audit_file_rotate_size=1000000
server_audit_file_rotations=10
plugin_dir=${db_path}/lib/plugin/

EOF

echo "패스워드 시도횟수"
echo "max_password_errors=5" >>${db_path}/conf-set/my.cnf
echo "" >>${db_path}/conf-set/my.cnf

echo "패스워드 복잡도 설정"
cat<<EOF>>${db_path}/conf-set/my.cnf
plugin_load_add= simple_password_check 
simple_password_check = ON
simple_password_check_minimal_length=9
simple_password_check_digits=1
simple_password_check_letters_same_case=1
simple_password_check_other-characters=2

EOF

echo "flush privileges;" >> vulner.sql

echo "mysqld_safe 권한 변경"
chmod 750 ${db_path}/bin/mariadbd-safe

echo "DBDATA 권한 변경"
chown -R ${MY_USER}:${MY_USER} ${dbdata_path}

echo "vulner.sql 입력"
echo -n "(DB root Password)"
mysql -u root -p  --force < vulner.sql
rm -rf vulner.sql

echo "enc 변수 저장"
salt=$(printf $SERV_USER | md5sum | cut -c1-16)
ENC_VALUE=$(echo $db_root_passwd | openssl enc -aes-256-cbc -a -S $salt -pbkdf2 -iter 100000 -pass pass:$MY_USER)
sudo sed -i "/DRP_ENC=/ c\DRP_ENC="${ENC_VALUE} 00.util_Install_latest

echo "DB_vulnerability done"
read -p "systemctl restart mariadb.service : y(running), n(not running) >" RET
if [ "${RET}" == "y" ]; then
	sudo systemctl restart mariadb
elif [ "${RET}" == "n" ]; then
	echo "after restart mariadb"
else
	echo "not command y or n"
fi
}

tomcat_vulnerable()
{
	echo "tomcat/webapps 삭제"
	systemctl stop tomcat.service | true
	rm -rf ${tomcat_path}/webapps
	ls -alt ${tomcat_path}
	rm -rf ${tomcat_path}/work/Catalina/localhost
	systemctl stop tomcat.service | true
}

rocky_vulnerable()
{
tmp=$(cat /etc/*release* | grep VERSION_ID | cut -d "=" -f2 | tr -d '"')
case "$tmp" in
        8.10);;
        9.5);;
		9.6);;
        *)
        echo "check os release*"
        exit 0
        ;;
esac

echo "U-2021-01 : root 계정 원격접속 제한"
#### rocky 9.5 에서는 conf.d/01.PermitRootLogin.conf 파일존재로 config 상단에 no 조치
cp -n /etc/ssh/sshd_config /etc/ssh/sshd_config.ori
sed -i 's/^PermitRootLogin/#PermitRootLogin/g' /etc/ssh/sshd_config
sed -i "1i\PermitRootLogin no" /etc/ssh/sshd_config
cat /etc/ssh/sshd_config | grep PermitRootLogin
echo "========================"

echo "U-2021-02 : 패스워드 복잡성 설정"
cp -n /etc/security/pwquality.conf /etc/security/pwquality.conf.ori
cat<<EOF>>/etc/security/pwquality.conf
minlen = 9
dcredit = -1
ucredit = -1
lcredit = -1
ocredit = -1
minclass = -1
maxrepeat = 2
maxclassrepeat = 2
difok = 5
#enforce_for_root
EOF
cat /etc/security/pwquality.conf | egrep -v '^[[:space:]]*(#.*)?$'
echo "========================"

tmp=$(cat /etc/*release* | grep VERSION_ID | cut -d "=" -f2 | tr -d '"')
if [ "${tmp}" == "8.10" ]; then
	echo "U-2021-03 : 계정 잠금 임계값 설정"
	cp -n /etc/security/faillock.conf /etc/security/faillock.conf.ori
	authselect apply-changes -b --backup=sssd.backup
	authselect create-profile user-profile -b sssd --symlink-meta --symlink-pam
	authselect select custom/user-profile
	authselect current
	authselect enable-feature with-mkhomedir
	authselect enable-feature with-faillock 
cat<<EOF>>/etc/security/faillock.conf
	dir=/var/run/faillock
	audit
	deny=3
	unlock_time=600
	silent
	event_deny_root
EOF
	mkdir /etc/authselect/custom/user-profile/pam.d
	ln -s /etc/pam.d/su /etc/authselect/custom/user-profile/pam.d/
	authselect apply-changes
	cat /etc/security/faillock.conf | egrep -v '^[[:space:]]*(#.*)?$'
	echo "========================"
fi

echo "U-2021-04 : 패스워드 파일 보호"
echo "========================"

echo "U-2021-44 : root 이외의 UID가 '0' 금지"
cat /etc/passwd | cut -d ':' -f 1,3 | grep 0
echo "========================"

echo "U-2021-45 : root 계정 su 제한"
cp -n /etc/pam.d/su /etc/pam.d/su.ori
chgrp wheel /bin/su
chmod 4750 /bin/su 
tmp=$(grep -En '^#auth.*required.*pam_wheel.so.*use_uid' /etc/pam.d/su |cut -d: -f1)
sed -i "${tmp}s/#auth/auth/g" /etc/pam.d/su
cat /etc/group | grep wheel | cut -d ':' -f 4
echo "========================"

echo "U-2021-46 : 패스워드 최소 길이 설정"
##### rocky 9.5 지원X
cp -n /etc/login.defs /etc/login.defs.ori
echo "setting before"
cat /etc/login.defs | grep -E "^PASS_MAX_DAYS|^PASS_MIN_DAYS|^PASS_MIN_LEN"
sed -i "s/^PASS_MIN_LEN/#PASS_MIN_LEN/g" /etc/login.defs
sed -i -r -e "/^#PASS_MIN_LEN/a\PASS_MIN_LEN\t5" /etc/login.defs
echo "========================"

echo "U-2021-47 : 패스워드 최대 사용기간 설정"
sed -i "s/^PASS_MAX_DAYS/#PASS_MAX_DAYS/g" /etc/login.defs
sed -i -r -e "/^#PASS_MAX_DAYS/a\PASS_MAX_DAYS\t90" /etc/login.defs

#일반계정 암호만료일 설정
tmp=$(awk -F: '$3 >= 1000 {print $1}' /etc/passwd)
for i in $tmp
do
	chage -M 90 -W 7 $i
done
echo "========================"

echo "U-2021-48 : 패스워드 최소 사용기간 설정"
sed -i "s/^PASS_MIN_DAYS/#PASS_MIN_DAYS/g" /etc/login.defs
sed -i -r -e "/^#PASS_MIN_DAYS/a\PASS_MIN_DAYS\t1" /etc/login.defs
echo "setting after"
cat /etc/login.defs | grep -E "^PASS_MAX_DAYS|^PASS_MIN_DAYS|^PASS_MIN_LEN"
echo "========================"

echo "U-2021-49 : 불필요한 계정 제거"
echo "========================"

echo "U-2021-50 : 관리자 그룹에 최소한의 계정 포함"
echo "========================"

echo "U-2021-51 : 계정이 존재하지 않는 GID 금지"
echo "========================"

echo "U-2021-52 : 동일한 UID 금지"
echo "========================"

echo "U-2021-53 : 사용자 shell 점검"
echo "========================"

echo "U-2021-54 : Session Timeout 설정"
echo "export TMOUT=600" >> /etc/profile
source /etc/profile 
echo $TMOUT
echo "========================"

echo "U-2021-43 : 로그의 정기적 검토 및 보고"
echo "========================"

echo "U-2021-72 : 정책에 따른 시스템 로깅 설정"
cp -n /etc/rsyslog.conf /etc/rsyslog.conf.ori
cat<<EOF>>/etc/rsyslog.conf
#=====add=====
#*.alert                                                 /dev/console
EOF
echo "========================"

echo "U-2021-19 : Finger 서비스 비활성화"
echo "========================"

echo "U-2021-20 : Anonymous FTP 비활성화"
echo "========================"

echo "U-2021-21 : r 계열 서비스 비활성화"
echo "========================"

echo "U-2021-22 : crond 파일 소유자 및 권한 설정"
echo "setting before"
ls -ahil /usr/bin/crontab |awk '{print $2, $10}'
ls -ahil /etc/crontab |awk '{print $2, $10}'
ls -ahil /etc/cron.deny  |awk '{print $2, $10}'
chmod 750 /usr/bin/crontab 
chmod 640 /etc/crontab
chmod 600 /etc/cron.deny 

echo "setting after"
ls -ahil /usr/bin/crontab |awk '{print $2, $10}'
ls -ahil /etc/crontab |awk '{print $2, $10}'
ls -ahil /etc/cron.deny  |awk '{print $2, $10}'
echo "========================"

echo "U-2021-23 : DoS 공격에 취약한 서비스 비활성화"
echo "========================"

echo "U-2021-24 : NFS 서비스 비활성화"
ps -ef | egrep "nfsd|statd|mountd" | grep -v grep
echo "========================"

echo "U-2021-25 : NFS 접근 통제"
systemctl status nfs-server
echo "========================"

echo "U-2021-26 : automountd 제거"
ps -ef | grep automount | grep -v grep
ps -ef | grep autofs | grep -v grep
echo "========================"

echo "U-2021-27 : RPC 서비스 확인"
systemctl status rpcbind 
systemctl stop rpcbind 
systemctl disable rpcbind 
echo "========================"

echo "U-2021-28 : NIS , NIS+ 점검"
ps -ef | egrep "ypserv|ypbind|ypxfrd|rpc.yppasswdd|rpc.ypupdated" | grep -v grep
echo "========================"

echo "U-2021-29 : tftp, talk 서비스 비활성화"
systemctl status tftp-server talk ntalk
echo "========================"

echo "U-2021-30 : Sendmail 버전 점검"
systemctl status sendmail 
echo "========================"

echo "U-2021-31 : 스팸 메일 릴레이 제한"
echo "========================"

echo "U-2021-32 : 일반사용자의 Sendmail 실행 방지"
echo "========================"

echo "U-2021-33 : DNS 보안 버전 패치"
ps -ef | grep named | grep -v grep
echo "========================"

echo "U-2021-34 : DNS Zone Transfer 설정"
echo "========================"

echo "U-2021-35 : 웹서비스 디렉토리 리스팅 제거"
cat /etc/httpd/conf/httpd.conf 2>/dev/null
echo "========================"

echo "U-2021-36 : 웹서비스 웹 프로세스 권한 제한"
echo "========================"

echo "U-2021-37 : 웹서비스 상위 디렉토리 접근 금지"
echo "========================"

echo "U-2021-38 : 웹서비스 불필요한 파일 제거"
echo "========================"

echo "U-2021-39 : 웹서비스 링크 사용 금지"
echo "========================"

echo "U-2021-40 : 웹서비스 파일 업로드 및 다운로드 제한"
echo "========================"

echo "U-2021-41 : 웹서비스 영역의 분리"
echo "========================"

echo "U-2021-60 : ssh 원격접속 허용"
cat /etc/ssh/sshd_config | grep Port
echo "========================"

echo "U-2021-61 : ftp 서비스 확인"
echo "========================"

echo "U-2021-62 : ftp 계정 shell 제한"
cat /etc/passwd | grep ftp
echo "========================"

echo "U-2021-63 : ftpusers 파일 소유자 및 권한 설정"
ls -ahil { /etc/ftpusers /etc/ftpd/ftpusers /etc/vsftpd/ftpusers /etc/vsftpd/user_list /etc/vsftpd.ftpusers /etc/vsftpd.user_list } 2>/dev/null
echo "========================"

echo "U-2021-64 : ftpusers 파일 설정(FTP 서비스 root 계정 접근제한)"
echo "========================"

echo "U-2021-65 : at 서비스 권한 설정"
echo "setting before"
ls -ahil /etc/at.allow 2>/dev/null | awk '{print $2, $10}'
ls -ahil /etc/at.deny 2>/dev/null | awk '{print $2, $10}'
ls -ahil /usr/bin/at 2>/dev/null | awk '{print $2, $10}'
chown root /etc/at.allow 2>/dev/null
chmod 640 /etc/at.allow 2>/dev/null
chown root /etc/at.deny 2>/dev/null
chmod 640 /etc/at.deny 2>/dev/null
chmod 750 /usr/bin/at 2>/dev/null
echo "setting after"
ls -ahil /etc/at.allow 2>/dev/null | awk '{print $2, $10}'
ls -ahil /etc/at.deny 2>/dev/null | awk '{print $2, $10}'
ls -ahil /usr/bin/at 2>/dev/null | awk '{print $2, $10}'
echo "========================"

echo "U-2021-66 : SNMP 서비스 구동 점검"
systemctl status snmp
echo "========================"

echo "U-2021-67 : SNMP 서비스 Community String의 복잡성 설정"
echo "========================"

echo "U-2021-68 : 로그온 시 경고 메시지 제공"
cp -n /etc/motd /etc/motd.ori
cat /dev/null > /etc/motd
echo "###########################################################################" >> /etc/motd
echo "#                  This is a private computer facility.                   #" >> /etc/motd
echo "#   Access for any reason must be specifically authrized by the manager.  #" >> /etc/motd
echo "#Unless you are so authorized, your continued access and ant other use may#" >> /etc/motd
echo "#             expose you to criminaland or civil proceedings              #" >> /etc/motd
echo "###########################################################################" >> /etc/motd

cp -n /etc/issue.net /etc/issue.net.ori
cat /dev/null > /etc/issue.net
echo "###########################################################################" >> /etc/issue.net
echo "#                                                                         #" >> /etc/issue.net
echo "#                             !!!WARNNING!!!                              #" >> /etc/issue.net
echo "#                                                                         #" >> /etc/issue.net
echo "###########################################################################" >> /etc/issue.net
echo "                !!! This System is for authrized user only !!!             " >> /etc/issue.net
sed -i -r -e "/^#Banner/a\Banner\t/etc/issue.net" /etc/ssh/sshd_config
echo "========================"
systemctl restart sshd 

echo "U-2021-69 : NFS 설정파일 접근권한"
echo "setting before"
ls -ahil /etc/exrport 2>/dev/null | awk '{print $2, $10}'
ls -ahil /etc/fstab 2>/dev/null | awk '{print $2, $10}'
chown root /etc/fstab 2>/dev/null
chmod 644 /etc/fstab 2>/dev/null
chown root /etc/exports 2>/dev/null
chmod 644 /etc/exports 2>/dev/null
echo "setting after"
ls -ahil /etc/exrport 2>/dev/null | awk '{print $2, $10}'
ls -ahil /etc/fstab 2>/dev/null | awk '{print $2, $10}'
echo "========================"

echo "U-2021-70 : expn, vrfy 명령어 제한"
cat /etc/mail/sendmail.cf 2>/dev/null | grep authwarnings
echo "========================"

echo "U-2021-71 : Apache 웹 서비스 정보 숨김"
echo "========================"

echo "U-2021-05 : root 홈, 패스 디렉토리 권한 및 패스 설정"
echo $PATH | grep "\.:" | wc -l
echo "========================"

echo "U-2021-06 : 파일 및 디렉토리 소유자 설정"
tmp=$(find / -nouser -print 2>/dev/null | wc -l)
if [ ${tmp} != "0" ]; then
	echo "check file :" ${tmp}
	echo "insert > find / -nouser -print 2>/dev/null"
fi
tmp=$(find / -nogroup -print 2>/dev/null | wc -l)
if [ ${tmp} != "0" ]; then
	echo "check file :" ${tmp}
	echo "insert > find / -nogroup -print 2>/dev/null"
fi
echo "========================"

echo "U-2021-07 : /etc/passwd 파일 소유자 및 권한 설정"
echo "setting before"
ls -ahil /etc/passwd | awk '{print $2, $10}'
chmod 644 /etc/passwd
echo "setting after"
ls -ahil /etc/passwd | awk '{print $2, $10}'
echo "========================"

echo "U-2021-08 : /etc/shadow 파일 소유자 및 권한 설정"
ls -ahil /etc/shadow | awk '{print $2, $10}'
echo "========================"

echo "U-2021-09 : /etc/hosts 파일 소유자 및 권한 설정"
echo "setting before"
ls -ahil /etc/hosts 2>/dev/null | awk '{print $2, $10}'
chmod 600 /etc/hosts 2>/dev/null
echo "setting after"
ls -ahil /etc/hosts 2>/dev/null | awk '{print $2, $10}'
echo "========================"

echo "U-2021-10 : /etc/(x)inetd.conf 파일 소유자 및 권한 설정"
echo "========================"

echo "U-2021-11 : /etc/syslog.conf 파일 소유자 및 권한 설정"
echo "setting before"
ls -ahil /etc/rsyslog.conf | awk '{print $2, $10}'
chmod 640 /etc/rsyslog.conf
echo "setting after"
ls -ahil /etc/rsyslog.conf | awk '{print $2, $10}'
echo "========================"

echo "U-2021-12 : /etc/services 파일 소유자 및 권한 설정"
ls -ahil /etc/services 2>/dev/null
echo "========================"

echo "U-2021-13 : SUID, SGID 설정 파일점검"
echo "setting before"
find / -user root -type f \( -perm -04000 -o -perm -02000 \) -xdev -exec ls -al {} \; 2>/dev/null

chmod -s /sbin/unix_chkpwd
chmod -s /usr/bin/newgrp
chmod -s /usr/bin/at
chmod -s /usr/bin/mount
chmod -s /usr/bin/umount
# chmod u-s /usr/lib/polkit-1/polkit-agent-helper-1
chmod u-s /usr/libexec/cockpit-session
#chmod u-s /usr/libexec/dbus-1/dbus-daemon-launch-helper
#chmod u-s /usr/libexec/Xorg.wrap
chmod u-s /usr/libexec/sssd/krb5_child
chmod u-s /usr/libexec/sssd/ldap_child
chmod u-s /usr/libexec/sssd/proxy_child
chmod u-s /usr/libexec/sssd/selinux_child
chmod u-s /usr/libexec/qemu-bridge-helper
chmod u-s /usr/libexec/spice-gtk-x86_64/spice-client-glib-usb-acl-helper
#chmod g-s /usr/libexec/utempter/utempter
#chmod g-s /usr/libexec/openssh/ssh-keysign

echo "setting after"
find / -user root -type f \( -perm -04000 -o -perm -02000 \) -xdev -exec ls -al {} \; 2>/dev/null
echo "========================"

echo "U-2021-14 : 사용자, 시스템 시작파일 및 환경파일 소유자 및 권한 설정"
echo "========================"

echo "U-2021-15 : world writable 파일 점검"
echo "========================"

echo "U-2021-16 : /dev에 존재하지 않는 device 파일 점검"
echo "========================"

echo "U-2021-17 : $HOME/.rhosts, hosts.equiv 사용 금지"
tmp=$(awk -F: '$3 >= 1000 {print $6}' /etc/passwd)
echo "setting before"
for i in $tmp
do
	ls -ahil $i/.bash_profile 2>/dev/null
	ls -ahil $i/.bashrc 2>/dev/null
	ls -ahil $i/.bash_logout 2>/dev/null
done

for i in $tmp
do
	chmod 640 $i/.bash_profile 2>/dev/null
	chmod 640 $i/.bashrc 2>/dev/null
	chmod 640 $i/.bash_logout 2>/dev/null
done
echo "setting after"
for i in $tmp
do
	ls -ahil $i/.bash_profile 2>/dev/null
	ls -ahil $i/.bashrc 2>/dev/null
	ls -ahil $i/.bash_logout 2>/dev/null
done
echo "========================"

echo "U-2021-18 : 접속 IP 및 포트 제한"
echo "========================"

echo "U-2021-55 : hosts.lpd 파일 소유자 및 권한 설정"
echo "========================"

echo "U-2021-56 : UMASK 설정 관리"
tmp=$(awk -F: '$3 >= 1000 {print $6}' /etc/passwd)
for i in $tmp
do
	[ -f "$i/.bashrc" ] && echo "umask 0022" >> "$i/.bashrc"
	cat $1/.bashrc 2>/dev/null | grep umask
done
echo "========================"

echo "U-2021-57 : 홈디렉토리 소유자 및 권한 설정"
echo "========================"

echo "U-2021-58 : 홈디렉토리로 지정한 디렉토리의 존재 관리"
echo "========================"

echo "U-2021-59 : 숨겨진 파일 및 디렉토리 검색 및 제거"
echo "========================"

echo "U-2021-40 : 최신 보안패치 및 벤더 권고사항 적용"
echo "========================"

}
apache_vulnerable()
{
##### check apache version
##### 2.4.63
echo "APA_1.01 : 데몬관리"
apache_id=$(cat ${apache_path}/conf/httpd.conf | grep "^User" | awk '{print $2}')
if [ "$apache_id" == "root" ]; then
	:
else
	checkp=$(cat /etc/passwd | grep ^${apache_id} | awk -F':' '{print $7}')
	if [ "$checkp" == "/sbin/nologin" ]; then
		:
	elif [ "$checkp" == "/bin/false" ]; then
		:
	else
		usermod -s /bin/false ${apache_id}
	fi
fi
echo "========================"

echo "APA_1.02 : 관리서버 디렉토리 권한 설정"
chmod -R 750 ${apache_path}
echo "========================"

echo "APA_1.03 : 설정 파일 권한 설정"
#### 소유권 지정 맨 하단 지정
#### conf , conf.d conf.module.d 모두 변경가능
#### conf.d 존재시 불필요로 변경
chmod -R 600 ${apache_path}/conf*

if [ -d "${apache_path}/conf.d" ]; then
	mv ${apache_path}/conf.d ${apache_path}/conf.d_bak
fi
echo "========================"

echo "APA_1.04 : 디렉토리 검색 기능 제거"
cp ${apache_path}/conf/httpd.conf ${apache_path}/conf/httpd.conf.bak_${DATE}
#### Options Indexes FollowSymLinks 주석처리 > <Directory "/app/httpd/htdocs"> 내 존재
#### <Directory / > 를 제외한 나머지 Directory 주석 진행
awk '
BEGIN { in_block=0 }
/<Directory / && $2 != "/>" {
    print "#"$0
    in_block=1
    next
}
in_block && /<\/Directory>/ {
    print "#"$0
    in_block=0
    next
}
in_block {
    print "#"$0
    next
}
{ print $0 }
' ${apache_path}/conf/httpd.conf > ${apache_path}/conf/httpd.conf.tmp && mv -f ${apache_path}/conf/httpd.conf.tmp ${apache_path}/conf/httpd.conf
chmod  600 ${apache_path}/conf/httpd.conf
echo "========================"

echo "APA_1.05 : 로그 디렉토리/파일 권한 설정"
chmod -R 640 ${apache_path}/logs
echo "========================"

echo "APA_1.06 : 로그 포맷 설정"
log_format=$(cat -n ${apache_path}/conf/httpd.conf | grep common | grep -vi logformat | awk '{print $1}')
log_format=($log_format)
for line in "${log_format[@]}"; do
	sed -i ${line}'s/common/combined/' ${apache_path}/conf/httpd.conf
done
echo "========================"

echo "APA_1.07 : 로그 저장 주기"
sudo tee ${apache_path}/conf/apache.logrotate > /dev/null << EOF
        daily
        rotate 180
        missingok
        notifempty
        compress
        delaycompress
        compresscmd /usr/bin/gzip
        uncompresscmd /usr/bin/gunzip
        compressoptions -9
        create 640 ${apache_id} ${apache_id}
        maxage 180
        size 100M
        dateext
EOF
chmod  600 ${apache_path}/conf/apache.logrotate
cp ${apache_path}/conf/apache.logrotate /etc/logrotate.d/apache.logrotate
logrotate -f /etc/logrotate.d/apache.logrotate
echo "========================"

echo "APA_1.08 : 해더 정보 노출 방지"

echo "ServerTokens Prod" >> ${apache_path}/conf/httpd.conf
echo "ServerSignature Off" >> ${apache_path}/conf/httpd.conf

echo "========================"

echo "APA_1.09 : HTTP Method 제한"
sed -i '/<Directory \/>/ a\
<LimitExcept GET POST>\
Order allow,deny\
Deny from all\
<\/LimitExcept>
' ${apache_path}/conf/httpd.conf

echo "TraceEnable Off" >> ${apache_path}/conf/httpd.conf
echo "========================"

echo "APA_1.10 : 에러 메시지 관리"
cat <<EOF >>  ${apache_path}/conf/httpd.conf
ErrorDocument 400 /errmsg/error.html
ErrorDocument 401 /errmsg/error.html
ErrorDocument 403 /errmsg/error.html
ErrorDocument 404 /errmsg/error.html
ErrorDocument 500 /errmsg/error.html
EOF
echo "========================"

echo "APA_1.11 : FollowSymLinks 옵션 비활성화"
echo "========================"

echo "APA_1.12 : MultiViews 옵션 비활성화"
echo "========================"

echo "APA_2.01 : 불필요한 파일 및 디렉토리 삭제"
rm -rf ${apache_path}/manual
rm -rf ${apache_path}/cgi-bin
echo "========================"

echo "APA_2.02 : 기본 문서명 사용 제한"
sed -i '/DirectoryIndex index.html/ c\ DirectoryIndex main.html' ${apache_path}/conf/httpd.conf
echo "========================"

echo "APA_2.03 : SSL v3.0 POODLE CVE 취약점"
echo "========================"

echo "APA_3.01 : 보안 패치 적용"
${apache_path}/bin/httpd -v
echo "========================"

chown -R ${apache_id}:${apache_id} ${apache_path}

}

main()
{
	case "$1" in
		db)
			checkroot&&
			DB_vulnerable
			;;
		tomcat)
			checkroot&&
			tomcat_vulnerable
			;;
		rocky)
			checkroot&&
			rocky_vulnerable
			;;
		apache)
			checkroot&&
			apache_vulnerable
			;;
		help)
			echo " option = {db|tomcat|rocky|apache}"
			;;
		*)
			echo "Usage: $0 {db|tomcat|rocky|apache}"
			exit 1
			;;
	esac
}

main "$@"
